[tool.poetry]
name = "python-engine"
version = "0.1.0"
description = "Python Engine Service for AI-Powered Features"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
gunicorn = "^23.0.0"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.20"
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
alembic = "^1.12.1"
redis = "^5.0.1"
torch = "^2.1.0"
transformers = "^4.35.0"
sentence-transformers = "^2.2.2"
numpy = "^1.26.0"
pandas = "^2.1.1"
scikit-learn = "^1.3.0"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
prometheus-client = "^0.23.1"
sentry-sdk = {extras = ["fastapi"], version = "^1.31.1"}
structlog = "^23.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"
httpx = "^0.25.0"
black = "^25.9.0"
isort = "^5.12.0"
mypy = "^1.5.1"
flake8 = "^6.1.0"
sphinx = "^7.2.5"
sphinx-rtd-theme = "^1.3.0"
sphinx-autodoc-typehints = "^1.24.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
disallow_untyped_decorators = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=app --cov-report=term-missing"
asyncio_mode = "auto"

[alembic]
# Path to folder containing the alembic.ini file
script_location = "alembic"

# Template used to generate migration files
file_template = "%%(year)d-%%(month).2d-%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s"

# Timezone to use when rendering the date within the migration file
# as well as the filename
# If specified, requires the python-dateutil library that is installed with alembic
# by default.
timezone = "UTC"

# Max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to alembic/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/bar %(here)s/bat alembic/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# sqlalchemy.url = driver://user:pass@localhost/dbname
