name: Build and Deploy to Render

on:
  push:
    branches: [ main ]
    paths:
      - 'services/**'
      - '.github/workflows/render-deploy.yml'
      - 'render.yaml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Render CLI
        run: |
          curl -o render https://render.com/download/cli/latest/linux-amd64
          chmod +x render
          sudo mv render /usr/local/bin/

      - name: Login to Render
        run: |
          echo "${{ secrets.RENDER_API_KEY }}" | render login

      - name: Deploy to Render
        run: |
          render blueprint launch
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: backend-api
            context: ./services/backend-api
          - name: ai-microservice-engine
            context: ./services/ai-microservice-engine
          - name: marketdata-ingestion
            context: ./services/marketdata-ingestion
          - name: python-risk-engine
            context: ./services/python-risk-engine
          - name: portfolio-simulation
            context: ./services/portfolio-simulation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: karingler/${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max