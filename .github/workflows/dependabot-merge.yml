name: Dependabot auto-approve and merge

on:
  pull_request_target:
    types: [opened, reopened, synchronize, labeled]
    branches: [main, develop]

permissions:
  pull-requests: write
  contents: write
  checks: read

jobs:
  security-checks:
    name: Security Checks
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    outputs:
      has-vulnerabilities: ${{ steps.audit.outputs.has-vulnerabilities }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run security audit
        id: audit
        run: |
          if npm audit --audit-level=moderate --json > audit-result.json; then
            echo "has-vulnerabilities=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No vulnerabilities found"
          else
            echo "has-vulnerabilities=true" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Vulnerabilities detected"
            cat audit-result.json
            exit 1
          fi
      
      - name: Run tests
        run: npm test
        continue-on-error: false
      
      - name: Upload audit results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-result.json
          retention-days: 30

  dependabot-auto-merge:
    name: Auto-approve and merge
    runs-on: ubuntu-latest
    needs: security-checks
    if: >
      github.actor == 'dependabot[bot]' && 
      needs.security-checks.result == 'success' &&
      (github.event.action == 'opened' || 
       github.event.action == 'reopened' ||
       github.event.action == 'synchronize' ||
       (github.event.action == 'labeled' && 
        contains(github.event.pull_request.labels.*.name, 'dependencies')))

    steps:
      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Determine merge strategy
        id: strategy
        run: |
          UPDATE_TYPE="${{ steps.metadata.outputs.update-type }}"
          PACKAGE_ECOSYSTEM="${{ steps.metadata.outputs.package-ecosystem }}"
          
          echo "update-type=${UPDATE_TYPE}" >> $GITHUB_OUTPUT
          echo "package-ecosystem=${PACKAGE_ECOSYSTEM}" >> $GITHUB_OUTPUT
          
          # Define merge criteria
          if [[ "${UPDATE_TYPE}" == "version-update:semver-major" ]]; then
            echo "should-auto-merge=false" >> $GITHUB_OUTPUT
            echo "‚ùå Major version update - requires manual review"
          elif [[ "${UPDATE_TYPE}" == "version-update:semver-minor" ]] && \
               [[ ! "${{ contains(github.event.pull_request.labels.*.name, 'security') }}" == "true" ]]; then
            echo "should-auto-merge=false" >> $GITHUB_OUTPUT
            echo "‚ö†Ô∏è Minor version update - requires manual review unless security patch"
          else
            echo "should-auto-merge=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Safe to auto-merge"
          fi

      - name: Approve PR
        if: >
          steps.strategy.outputs.should-auto-merge == 'true' &&
          (contains(github.event.pull_request.labels.*.name, 'dependencies') ||
           contains(github.event.pull_request.labels.*.name, 'security'))
        run: |
          echo "üìù Approving PR #${{ github.event.pull_request.number }}"
          gh pr review ${{ github.event.pull_request.number }} \
            --approve \
            --body "**Automatically approved by Dependabot workflow** ‚úÖ

          - Update type: \`${{ steps.metadata.outputs.update-type }}\`
          - Package: \`${{ steps.metadata.outputs.dependency-names }}\`
          - Previous version: \`${{ steps.metadata.outputs.previous-version }}\`
          - New version: \`${{ steps.metadata.outputs.new-version }}\`
          - Security checks: Passed ‚úÖ"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: >
          steps.strategy.outputs.should-auto-merge == 'true' &&
          (contains(github.event.pull_request.labels.*.name, 'dependencies') ||
           contains(github.event.pull_request.labels.*.name, 'security'))
        run: |
          echo "üîÑ Enabling auto-merge for PR #${{ github.event.pull_request.number }}"
          gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment for manual review
        if: steps.strategy.outputs.should-auto-merge == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ö†Ô∏è **Manual review required**
              
              This PR contains a **${{ steps.metadata.outputs.update-type }}** update and requires manual review before merging.
              
              **Details:**
              - Package: \`${{ steps.metadata.outputs.dependency-names }}\`
              - Previous version: \`${{ steps.metadata.outputs.previous-version }}\`
              - New version: \`${{ steps.metadata.outputs.new-version }}\`
              
              Please review the changelog and test thoroughly before approving.`
            })

  notify-on-failure:
    name: Notify on failure
    runs-on: ubuntu-latest
    needs: [security-checks, dependabot-auto-merge]
    if: failure()
    
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const failedJobs = [
              ${{ needs.security-checks.result == 'failure' && '"Security Checks"' || '' }},
              ${{ needs.dependabot-auto-merge.result == 'failure' && '"Auto-merge"' || '' }}
            ].filter(Boolean);
            
            if (failedJobs.length > 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ùå **Dependabot auto-merge workflow failed**
                
                Failed jobs: ${failedJobs.join(', ')}
                
                Please review the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.`
              })
            }
