services:
  # Backend API Service
  - type: web
    name: backend-api
    runtime: image
    image:
      url: ghcr.io/beginnerinvestorhub/beginner-investor-api/backend-api:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: JWT_SECRET
        generateValue: true
      - key: COOKIE_SECRET
        generateValue: true
      - key: CORS_ORIGIN
        value: https://your-frontend.vercel.app
    autoDeploy: true

  # Market Data Ingestion Service
  - type: web
    name: marketdata-ingestion
    runtime: image
    image:
      url: ghcr.io/beginnerinvestorhub/beginner-investor-api/marketdata-ingestion:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3002
      - key: MARKET_DATA_API_KEY
        sync: false
      - key: FINNHUB_API_KEY
        sync: false
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
    autoDeploy: true

  # AI Microservice Engine
  - type: web
    name: ai-microservice-engine
    runtime: image
    image:
      url: ghcr.io/beginnerinvestorhub/beginner-investor-api/ai-microservice-engine:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3003
      - key: OPENAI_API_KEY
        sync: false
      - key: AI_MODEL_VERSION
        value: gpt-4
      - key: AI_TEMPERATURE
        value: "0.7"
      - key: AI_MAX_TOKENS
        value: "150"
      - key: BEHAVIORAL_NUDGE_ENABLED
        value: "true"
    autoDeploy: true

  # Python Risk Engine
  - type: web
    name: python-risk-engine
    runtime: image
    image:
      url: ghcr.io/beginnerinvestorhub/beginner-investor-api/python-risk-engine:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: PORT
        value: 3001
      - key: RISK_CALCULATION_WORKERS
        value: "2"
    autoDeploy: true

  # Portfolio Simulation Service
  - type: web
    name: portfolio-simulation
    runtime: image
    image:
      url: ghcr.io/beginnerinvestorhub/beginner-investor-api/portfolio-simulation:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3004
      - key: RISK_ENGINE_URL
        value: https://python-risk-engine.onrender.com
      - key: MARKET_DATA_URL
        value: https://marketdata-ingestion.onrender.com
      - key: AI_SERVICE_URL
        value: https://ai-microservice-engine.onrender.com
    autoDeploy: true

databases:
- name: beginner-investor-db
  databaseName: investment_hub
  user: investment_hub_user
  plan: free
  region: virginia
  ipAllowList:
    - source: 0.0.0.0/0
      description: everywhere
  postgresMajorVersion: "17"

# External Redis Configuration (CRITICAL)
# IMPORTANT: Create a secret named 'redis-connection-string' in your Render dashboard
# This should contain your external Redis Cloud connection string (e.g., redis://username:password@host:port)
# You can also use individual environment variables if preferred:
# REDIS_HOST, REDIS_PORT, REDIS_PASSWORD, etc.
