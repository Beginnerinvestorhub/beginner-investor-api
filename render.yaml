services:
  # Frontend Service (Docker Hub)
  - type: web
    name: beginnerinvestorhub-frontend
    runtime: docker
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend
    plan: starter
    autoDeploy: false
    healthCheckPath: /
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_API_BASE_URL
        value: https://your-backend-api-url.onrender.com

  # Backend API Service
  - type: web
    name: backend-api
    runtime: image
    image:
      url: karingler/backend-api:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: JWT_SECRET
        generateValue: true
      - key: COOKIE_SECRET
        generateValue: true
      - key: SERVICE_AUTH_SECRET
        generateValue: true
      - key: DATABASE_ENCRYPTION_KEY
        generateValue: true
      - key: CORS_ORIGIN
        value: https://your-frontend.vercel.app
    autoDeploy: true

  # Market Data Ingestion Service
  - type: web
    name: marketdata-ingestion
    runtime: image
    image:
      url: karingler/marketdata-ingestion:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3002
      - key: MARKET_DATA_API_KEY
        sync: false
      - key: FINNHUB_API_KEY
        sync: false
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
    autoDeploy: true

  # AI Microservice Engine
  - type: web
    name: ai-microservice-engine
    runtime: image
    image:
      url: karingler/ai-microservice-engine:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3003
      - key: OPENAI_API_KEY
        sync: false
      - key: AI_MODEL_VERSION
        value: gpt-4
      - key: AI_TEMPERATURE
        value: "0.7"
      - key: AI_MAX_TOKENS
        value: "150"
      - key: BEHAVIORAL_NUDGE_ENABLED
        value: "true"
    autoDeploy: true

  # Python Risk Engine
  - type: web
    name: python-risk-engine
    runtime: image
    image:
      url: karingler/python-risk-engine:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: PORT
        value: 3001
      - key: RISK_CALCULATION_WORKERS
        value: "2"
    autoDeploy: true

  # Portfolio Simulation Service
  - type: web
    name: portfolio-simulation
    runtime: image
    image:
      url: karingler/portfolio-simulation:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: PORT
        value: 3004
      - key: RISK_ENGINE_URL
        value: https://python-risk-engine.onrender.com
      - key: MARKET_DATA_URL
        value: https://marketdata-ingestion.onrender.com
      - key: AI_SERVICE_URL
        value: https://ai-microservice-engine.onrender.com
    autoDeploy: true

  # Behavioral Nudge Engine Service
  - type: web
    name: behavioral-nudge-engine
    runtime: image
    image:
      url: karingler/behavioral-nudge-engine:latest
    plan: starter
    healthCheckPath: /health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      - key: REDIS_URL
        fromSecret: redis-connection-string
      - key: PORT
        value: 8000
      - key: BEHAVIORAL_NUDGE_API_KEY
        sync: false
    autoDeploy: true

databases:
- name: beginner-investor-db
  databaseName: investment_hub
  user: investment_hub_user
  plan: free
  region: virginia
  ipAllowList:
    - source: 0.0.0.0/0
      description: everywhere
  postgresMajorVersion: "17"

# External Redis Configuration (CRITICAL)
# IMPORTANT: Create secrets in your Render dashboard:
#
# 1. redis-connection-string: Your external Redis Cloud connection string
#    Example: redis://username:password@host:port
#
# 2. For additional security, you can also set individual Redis components:
#    REDIS_HOST, REDIS_PORT, REDIS_PASSWORD (alternative to connection string)
#
# The services will use these secrets for Redis connectivity.
