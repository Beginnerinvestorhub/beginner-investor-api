# render.yaml - Render Blueprint for Beginner Investor Hub
# This Blueprint defines all services and databases for the Beginner Investor Hub.
services:
  # Core Backend API - The main entry point for the application.
  # Handles user authentication with Firebase and routes requests to other services.
  - type: web
    name: backend-api-service
    env: node
    buildCommand: |
      npm install
      cd tools-restructured/services/backend-api && npm install
    startCommand: node tools-restructured/services/backend-api/server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      # Firebase Authentication credentials for secure access.
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false
      - key: FIREBASE_WEB_API_KEY
        sync: false
      # Links to the PostgreSQL database for user and application data.
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      # Internal URLs for communication between microservices.
      - key: AI_MICROSERVICE_URL
        value: https://ai-microservice-engine.onrender.com
      - key: PORTFOLIO_SIMULATION_URL
        value: https://portfolio-simulation-service.onrender.com
      - key: MARKET_DATA_URL
        value: https://market-data-ingestion-service.onrender.com
      # CORS (Cross-Origin Resource Sharing) settings.
      - key: CORS_ORIGIN
        sync: false
    healthCheckPath: /health
    
  # AI Microservice Engine - Dedicated service for AI functionalities.
  # This powers features like behavioral nudges and the Learning Hub.
  - type: web
    name: ai-microservice-engine
    env: node
    buildCommand: |
      npm install
      cd tools-restructured/services/ai_microservice && npm install
    startCommand: node tools-restructured/services/ai_microservice/server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10001
      # OpenAI credentials for API access.
      - key: OPENAI_API_KEY
        sync: false
      - key: MODEL_API_ENDPOINT
        value: https://api.openai.com/v1
      - key: OPENAI_MODEL
        value: gpt-4
      # Firebase Project ID for token verification.
      - key: FIREBASE_PROJECT_ID
        sync: false
      # Feature flags for enabling/disabling parts of the application.
      - key: BEHAVIORAL_NUDGE_ENABLED
        value: true
      - key: LEARNING_HUB_ENABLED
        value: true
      - key: GAMIFICATION_ENABLED
        value: true
      # Database for storing user progress.
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
    healthCheckPath: /health

  # Python Risk Engine - A specialized service for risk calculations.
  # This uses a separate Python environment for specific libraries.
  - type: web
    name: python-risk-engine
    env: python
    buildCommand: |
      cd tools-restructured/services/python-engine
      pip install -r requirements.txt
    startCommand: python tools-restructured/services/python-engine/app.py
    envVars:
      - key: FLASK_ENV
        value: production
      - key: PORT
        value: 10002
      # Firebase for user token verification.
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: RISK_CALCULATION_ENABLED
        value: true
    healthCheckPath: /health

  # Market Data Ingestion - Service for fetching and storing market data.
  # This service populates the database with real-time stock and market info.
  - type: web
    name: market-data-ingestion-service
    env: node
    buildCommand: |
      npm install
      cd tools-restructured/services/market-data-ingestion && npm install
    startCommand: node tools-restructured/services/market-data-ingestion/server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10003
      # Database for persistent storage of market data.
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      # API keys for third-party market data providers.
      - key: ALPHA_VANTAGE_API_KEY
        sync: false
      - key: FINNHUB_API_KEY
        sync: false
      - key: MARKET_DATA_API_KEY
        sync: false
      # Firebase for admin operations.
      - key: FIREBASE_PROJECT_ID
        sync: false
    healthCheckPath: /health

  # Portfolio Simulation - Service for managing and simulating user portfolios.
  # This service relies on the Python Risk Engine and Market Data services.
  - type: web
    name: portfolio-simulation-service
    env: node
    buildCommand: |
      npm install
      cd tools-restructured/services/portfolio-simulation && npm install
    startCommand: node tools-restructured/services/portfolio-simulation/server.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10004
      # Database for user portfolio data.
      - key: DATABASE_URL
        fromDatabase:
          name: beginner-investor-db
          property: connectionString
      # Dependent services for risk analysis and market data.
      - key: PYTHON_RISK_ENGINE_URL
        value: https://python-risk-engine.onrender.com
      - key: MARKET_DATA_URL
        value: https://market-data-ingestion-service.onrender.com
      # Firebase for user authentication.
      - key: FIREBASE_PROJECT_ID
        sync: false
    healthCheckPath: /health

databases:
  # PostgreSQL Database - The primary relational database for the application.
  - name: beginner-investor-db
    databaseName: beginner_investor_hub
